kind: Deployment
apiVersion: apps/v1
metadata:
  name: airflow-scheduler
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: airflow
      component: scheduler
  template:
    metadata:
      labels:
        tier: airflow
        component: scheduler
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      serviceAccountName: airflow-sa
      containers:
      - name: scheduler
        image: apache/airflow:2.2.2
        imagePullPolicy: IfNotPresent
        args: ["scheduler"]
        env:
        - name: AIRFLOW__CORE__EXECUTOR
          value: "KubernetesExecutor"
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          value: "mysql+mysqldb://ihnokim:mysql@10.0.2.15:3306/airflow"
        - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION
          value: "true"
        - name: AIRFLOW__CORE__LOAD_EXAMPLES
          value: "false"
        - name: AIRFLOW__KUBERNETES__NAMESPACE
          value: airflow
        - name: AIRFLOW__KUBERNETES__POD_TEMPLATE_FILE
          value: /opt/airflow/pod-templates/worker.yaml
        - name: AIRFLOW__KUBERNETES__VERIFY_SSL
          value: "false"
        - name: AIRFLOW__KUBERNETES__IN_CLUSTER
          value: "true"
        - name: AIRFLOW__KUBERNETES__WORKER_CONTAINER_REPOSITORY
          value: apache/airflow
        - name: AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG
          value: 2.2.2
        - name: AIRFLOW__KUBERNETES__RUN_AS_USER
          value: "50000"
        - name: AIRFLOW__CORE__MIN_SERIALIZED_DAG_FETCH_INTERVAL
          value: "10"
        - name: AIRFLOW__CORE__MIN_SERIALIZED_DAG_UPDATE_INTERVAL
          value: "30"
        volumeMounts:
        - mountPath: /opt/airflow/pod-templates
          name: airflow-pod-templates
        - mountPath: /opt/airflow/logs
          name: airflow-logs
        - mountPath: /opt/airflow/dags
          name: airflow-dags
      volumes:
      - name: airflow-pod-templates
        persistentVolumeClaim:
          claimName: airflow-pod-templates-pvc
      - name: airflow-logs
        persistentVolumeClaim:
          claimName: airflow-logs-pvc
      - name: airflow-dags
        persistentVolumeClaim:
          claimName: airflow-dags-pvc
